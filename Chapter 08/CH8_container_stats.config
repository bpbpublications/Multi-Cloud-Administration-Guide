import docker
import time

client = docker.from_env()

def get_container_stats(container_id):
    container = client.containers.get(container_id)
    stats = container.stats(stream=False)
    return stats

def get_cpu_usage(stats):
    cpu_stats = stats['cpu_stats']
    precpu_stats = stats['precpu_stats']
    cpu_delta = cpu_stats['cpu_usage']['total_usage'] - precpu_stats['cpu_usage']['total_usage']
    system_delta = cpu_stats['system_cpu_usage'] - precpu_stats['system_cpu_usage']
    cpu_percent = round((cpu_delta / system_delta) * 100.0, 2)
    return cpu_percent

def get_memory_usage(stats):
    memory_stats = stats['memory_stats']
    memory_usage = memory_stats['usage'] / (1024 ** 2)
    memory_limit = memory_stats['limit'] / (1024 ** 2)
    memory_percent = round((memory_usage / memory_limit) * 100.0, 2)
    return memory_percent

def get_network_io(stats):
    network_stats = stats['networks']
    rx_bytes = network_stats['eth0']['rx_bytes']
    tx_bytes = network_stats['eth0']['tx_bytes']
    return (rx_bytes, tx_bytes)

# Example usage
container_id = 'your-container-id-here'

while True:
    stats = get_container_stats(container_id)
    cpu_usage = get_cpu_usage(stats)
    memory_usage = get_memory_usage(stats)
    rx_bytes, tx_bytes = get_network_io(stats)

    print(f'CPU Usage: {cpu_usage}%')
    print(f'Memory Usage: {memory_usage}%')
    print(f'Network In: {rx_bytes} bytes')
    print(f'Network Out: {tx_bytes} bytes')

    time.sleep(1)