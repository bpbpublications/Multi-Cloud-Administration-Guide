using System;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

public static class CreateInvoice
{
    [FunctionName("CreateInvoice")]
    public static async Task<IActionResult> Run(
        [HttpTrigger(AuthorizationLevel.Function, "post", Route = null)] HttpRequestMessage req,
        [Queue("invoices")] IAsyncCollector<string> invoiceQueue,
        ILogger log)
    {
        log.LogInformation("Creating invoice...");

        // Deserialize the request body to get the order information
        string requestBody = await req.Content.ReadAsStringAsync();
        dynamic data = JsonConvert.DeserializeObject(requestBody);

        // Generate the invoice
        string invoice = GenerateInvoice(data);

        // Add the invoice to a queue for processing
        await invoiceQueue.AddAsync(invoice);

        log.LogInformation("Invoice created and added to the queue.");

        return new OkResult();
    }

    private static string GenerateInvoice(dynamic data)
    {
        // Generate the invoice using the order information
        string invoice = "Invoice for order #" + data.orderId + ":\n";
        invoice += "Item: " + data.itemName + "\n";
        invoice += "Price: $" + data.itemPrice + "\n";
        invoice += "Quantity: " + data.quantity + "\n";
        invoice += "Total: $" + (data.itemPrice * data.quantity) + "\n";

        // TODO: Add logic to send the invoice to the customer

        return invoice;
    }
}